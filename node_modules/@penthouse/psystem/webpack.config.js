
const TerserPlugin = require('terser-webpack-plugin')

module.exports = (env, argv) => {
	const dir = process.cwd()

    if (argv.mode === "production") {
        const fs = require('fs-extra')
        fs.emptyDirSync("build/")
        fs.copySync("app/public/", "build/", { dereference: true })
        console.log("> Deploying your app to /build")
    }
    
    return [{
        entry: dir + "/app/index.js",
        output: {
            path: dir + "/build",
            filename: "bundle.js"
		},
        optimization: {
			minimizer: [
				new TerserPlugin({
					terserOptions: {
						keep_fnames: true,
						keep_classnames: true
					}
				})
			]
        },
        devServer: {
			host: "0.0.0.0",
			port: 8080,
			contentBase: [dir + "/app/public"],
			watchOptions: { ignored: dir + "/node_modules" },
			historyApiFallback: true,
			disableHostCheck: true,
			compress: true,
			hot: true,
			open: true,
			quiet: true,
			clientLogLevel: "error"
        },
        module: {
            rules: [
                {
                    test: /\.js$/,
                    include: [
                        /app/,
                        /node_modules\/\@penthouse\/psystem/,
                        /PSystem.js/
                    ],
                    use: {
                        loader: 'babel-loader',
                        options: {
                            presets: ["@babel/preset-env"],
                            plugins: ["@babel/plugin-proposal-class-properties"]
                        }
                    }
                },
                {
                    test: /\.s?css$/,
                    use: ["style-loader", "css-loader", "sass-loader"]
                }
            ]
        },
    }]
}
